#!/usr/bin/env php
<?php

declare(strict_types=1);

require __DIR__ . '/../vendor/autoload.php';

use App\{
    Command\Benchmark\BenchmarkInitBenchmarkCommand,
    Command\Benchmark\BenchmarkValidateCommand,
    Command\Composer\ComposerUpdateCommand,
    Command\Configure\ConfigureAllCommand,
    Command\Configure\ConfigureComponentSourceCodeUrlsCommand,
    Command\Configure\ConfigureConfigurationClassCommand,
    Command\Configure\ConfigureDirectoryCommand,
    Command\Configure\ConfigureInitBenchmarkCommand,
    Command\Configure\ConfigureReadmeCommand,
    Command\Configure\ConfigureResponseBodyCommand,
    Command\Configure\ConfigureVhostCommand,
    Command\PhpVersion\PhpVersionCliDefineCommand,
    Command\Validate\ValidateAllCommand,
    Command\Validate\ValidateBranchNameCommand,
    Command\Validate\ValidateComposerJsonCommand,
    Command\Validate\ValidateConfigurationComponentSourceCodeUrlsCommand,
    Command\Validate\ValidateConfigurationComposerLockCommand,
    Command\Validate\ValidateConfigurationConfigurationClassCommand,
    Command\Validate\ValidateConfigurationInitBenchmarkCommand,
    Command\Validate\ValidateConfigurationResponseBodyCommand,
    Command\Validate\ValidateConfigurationVhostCommand,
    Command\Vhost\VhostCreateCommand
};
use Symfony\Component\Console\Application;

$application = new Application();

$application->add(new BenchmarkInitBenchmarkCommand());
$application->add(new BenchmarkValidateCommand());

$application->add(new ComposerUpdateCommand());

$application->add(new ConfigureAllCommand());
$application->add(new ConfigureConfigurationClassCommand());
$application->add(new ConfigureComponentSourceCodeUrlsCommand());
$application->add(new ConfigureDirectoryCommand());
$application->add(new ConfigureInitBenchmarkCommand());
$application->add(new ConfigureReadmeCommand());
$application->add(new ConfigureResponseBodyCommand());
$application->add(new ConfigureVhostCommand());

$application->add(new PhpVersionCliDefineCommand());

$application->add(new ValidateAllCommand());
$application->add(new ValidateBranchNameCommand());
$application->add(new ValidateComposerJsonCommand());
$application->add(new ValidateConfigurationComposerLockCommand());
$application->add(new ValidateConfigurationConfigurationClassCommand());
$application->add(new ValidateConfigurationComponentSourceCodeUrlsCommand());
$application->add(new ValidateConfigurationInitBenchmarkCommand());
$application->add(new ValidateConfigurationResponseBodyCommand());
$application->add(new ValidateConfigurationVhostCommand());

$application->add(new VhostCreateCommand());

$application->run();
